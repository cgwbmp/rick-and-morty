{"version":3,"file":"static/webpack/static/development/pages/index.js.d209f97f4ac0923cc3ba.hot-update.js","sources":["webpack:///./pages/index.tsx","webpack:///./src/containers/characters/index.tsx"],"sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport Characters from '../src/containers/characters';\nimport { getCharacters as getCharactersApi } from '../src/api';\nimport { Character, Error } from '../src/types';\n\ninterface HomeProps {\n  characters?: Array<Character>,\n  page?: number,\n  pages?: number,\n  error?: Error,\n}\n\nconst Home: NextPage<HomeProps> = (props: HomeProps) => {\n  const {\n    characters,\n    page,\n    pages,\n    error,\n  } = props;\n  if (error) {\n    return <ErrorPage statusCode={error.code} />;\n  }\n  return (\n    <>\n      <Head>\n        <title>\n          Characters - The Rick and Morty Wiki\n        </title>\n      </Head>\n      <Characters characters={characters} page={page} pages={pages} />\n    </>\n  );\n};\n\nHome.getInitialProps = async ({ query }) => {\n  const page: number = Number(query.page) || 1;\n  const response = await getCharactersApi(page);\n  if ('error' in response) {\n    return {\n      error: response.error,\n    };\n  }\n  const characters:Array<Character> = response.results;\n  const { pages }: { pages: number } = response.info;\n  return {\n    characters,\n    page,\n    pages,\n  };\n};\n\nexport default Home;\n","import React from 'react';\nimport Layout from '../../components/layout';\nimport CharacterCard from '../../components/character-card';\nimport Pagination from '../../components/pagination';\nimport Grid, { GridItem } from '../../components/grid';\nimport { Character } from '../../types';\n\ninterface CharactersProps {\n  characters?: Array<Character>,\n  page?: number,\n  pages?: number,\n}\n\nconst Characters: React.FC<CharactersProps> = (props: CharactersProps) => {\n  const {\n    characters = [],\n    page = 1,\n    pages = 0,\n  } = props;\n  return (\n    <Layout>\n      <Grid>\n        {characters.map((character: Character) => (\n          <GridItem key={character.id}>\n            <CharacterCard\n              name={character.name}\n              image={character.image}\n              status={character.status}\n            />\n          </GridItem>\n        ))}\n      </Grid>\n      <Pagination page={page} pages={pages} />\n    </Layout>\n  );\n};\n\nexport default Characters;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AADA;AACA;AALA;AAQA;AACA;AATA;AAWA;AACA;AACA;AAHA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;A","sourceRoot":""}