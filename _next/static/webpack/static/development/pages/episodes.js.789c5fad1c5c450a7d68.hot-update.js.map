{"version":3,"file":"static/webpack/static/development/pages/episodes.js.789c5fad1c5c450a7d68.hot-update.js","sources":["webpack:///./pages/episodes.tsx"],"sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport Episodes from '../src/containers/episodes';\nimport { getEpisodes as getEpisodesApi } from '../src/api';\nimport { Episode, Error } from '../src/types';\n\ninterface HomeProps {\n  episodes?: Array<Episode>,\n  page?: number,\n  pages?: number,\n  currentPath?: string,\n  error?: Error,\n}\n\nconst Home: NextPage<HomeProps> = (props: HomeProps) => {\n  const {\n    episodes,\n    page,\n    pages,\n    currentPath,\n    error,\n  } = props;\n  if (error) {\n    return <ErrorPage statusCode={error.code} />;\n  }\n  return (\n    <>\n      <Head>\n        <title>\n          Episodes - The Rick and Morty Wiki\n        </title>\n      </Head>\n      <Episodes\n        episodes={episodes}\n        page={page}\n        pages={pages}\n        currentPath={currentPath}\n      />\n    </>\n  );\n};\n\nHome.getInitialProps = async ({ query, pathname }) => {\n  const page: number = Number(query.page) || 1;\n  const response = await getEpisodesApi(page);\n  /*if ('error' in response) {\n    return {\n      error: response.error,\n    };\n  }*/\n  const episodes:Array<Episode> = response.results;\n  const { pages }: { pages: number } = response.info;\n  return {\n    episodes,\n    page,\n    pages,\n    currentPath: pathname,\n  };\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;;;;;AAKA;AACA;AATA;AAWA;AACA;AACA;AACA;AAJA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}