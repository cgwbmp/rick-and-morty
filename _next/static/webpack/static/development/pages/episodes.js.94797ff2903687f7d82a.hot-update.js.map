{"version":3,"file":"static/webpack/static/development/pages/episodes.js.94797ff2903687f7d82a.hot-update.js","sources":["webpack:///./src/api/episodes.ts"],"sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { Error } from '../types';\n\nconst entrypoint = 'https://rickandmortyapi.com';\n\ninterface OriginalApiResponse {\n  results: Array<{\n    id: string,\n    name: string,\n    air_date: string,\n    episode: string,\n  }>,\n  info: {\n    count: number,\n    pages: number,\n  },\n}\n\ninterface OriginalApiReject {\n  error: string,\n}\n\ninterface ApiResponse extends OriginalApiResponse {\n}\n\ninterface ApiReject {\n  error: Error,\n}\n\nasync function getEpisodes(page: number = 1): Promise<ApiResponse | ApiReject> {\n  const source: Response = await fetch(`${entrypoint}/api/episode?page=${page}`);\n  const response: OriginalApiResponse | OriginalApiReject = await source.json();\n  if ('error' in response) {\n    return {\n      error: {\n        code: source.status,\n        message: response.error,\n      },\n    };\n  }\n  return response;\n}\n\nexport default getEpisodes;\nexport {\n  getEpisodes,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AAyBA;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AACA;AAFA;AADA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAcA;;;;;A","sourceRoot":""}