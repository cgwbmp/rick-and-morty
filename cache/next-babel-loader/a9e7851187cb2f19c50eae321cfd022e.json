{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Router from 'next/router';\nimport Preloader from '../src/components/preloader';\n\nvar CustomApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(CustomApp, _App);\n\n  function CustomApp(props) {\n    var _this;\n\n    _classCallCheck(this, CustomApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomApp).call(this, props));\n    _this.state = {\n      pending: false\n    };\n    _this.setPending = _this.setPending.bind(_assertThisInitialized(_this));\n    _this.unsetPending = _this.unsetPending.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CustomApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Router.events.on('routeChangeStart', this.setPending);\n      Router.events.on('routeChangeComplete', this.unsetPending);\n      Router.events.on('routeChangeError', this.unsetPending);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Router.events.off('routeChangeStart', this.setPending);\n      Router.events.off('routeChangeComplete', this.unsetPending);\n      Router.events.off('routeChangeError', this.unsetPending);\n    }\n  }, {\n    key: \"setPending\",\n    value: function setPending() {\n      this.setState({\n        pending: true\n      });\n    }\n  }, {\n    key: \"unsetPending\",\n    value: function unsetPending() {\n      this.setState({\n        pending: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var pending = this.state.pending;\n      /* eslint-disable react/jsx-props-no-spreading */\n\n      return __jsx(React.Fragment, null, __jsx(Component, pageProps), pending ? __jsx(Preloader, null) : null);\n      /* eslint-enable react/jsx-props-no-spreading */\n    }\n  }]);\n\n  return CustomApp;\n}(App);\n\nexport default CustomApp;","map":null,"metadata":{},"sourceType":"module"}