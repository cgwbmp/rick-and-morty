{"ast":null,"code":"var _jsxFileName = \"/home/mq/Documents/rick-and-morty/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport Characters from '../src/modules/characters';\nimport { getCharacters as getCharactersApi } from '../src/api';\n\nconst Home = props => {\n  const {\n    characters,\n    page,\n    pages,\n    error\n  } = props;\n\n  if (error) {\n    return __jsx(ErrorPage, {\n      statusCode: error.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Characters - The Rick and Morty Wiki\")), __jsx(Characters, {\n    characters: characters,\n    page: page,\n    pages: pages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nHome.getInitialProps = async ({\n  query\n}) => {\n  const page = Number(query.page) || 1;\n  const response = await getCharactersApi(page);\n\n  if ('error' in response) {\n    return {\n      error: response.error\n    };\n  }\n\n  const characters = response.results;\n  const {\n    pages\n  } = response.info;\n  return {\n    characters,\n    page,\n    pages\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/mq/Documents/rick-and-morty/pages/index.tsx"],"names":["React","ErrorPage","Head","Characters","getCharacters","getCharactersApi","Home","props","characters","page","pages","error","code","getInitialProps","query","Number","response","results","info"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,aAAa,IAAIC,gBAA1B,QAAkD,YAAlD;;AAUA,MAAMC,IAAyB,GAAIC,KAAD,IAAsB;AACtD,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;;AAMA,MAAII,KAAJ,EAAW;AACT,WAAO,MAAC,SAAD;AAAW,MAAA,UAAU,EAAEA,KAAK,CAACC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF,EAME,MAAC,UAAD;AAAY,IAAA,UAAU,EAAEJ,UAAxB;AAAoC,IAAA,IAAI,EAAEC,IAA1C;AAAgD,IAAA,KAAK,EAAEC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CApBD;;AAsBAJ,IAAI,CAACO,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAML,IAAY,GAAGM,MAAM,CAACD,KAAK,CAACL,IAAP,CAAN,IAAsB,CAA3C;AACA,QAAMO,QAAQ,GAAG,MAAMX,gBAAgB,CAACI,IAAD,CAAvC;;AACA,MAAI,WAAWO,QAAf,EAAyB;AACvB,WAAO;AACLL,MAAAA,KAAK,EAAEK,QAAQ,CAACL;AADX,KAAP;AAGD;;AACD,QAAMH,UAA2B,GAAGQ,QAAQ,CAACC,OAA7C;AACA,QAAM;AAAEP,IAAAA;AAAF,MAA+BM,QAAQ,CAACE,IAA9C;AACA,SAAO;AACLV,IAAAA,UADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAfD;;AAiBA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport Characters from '../src/modules/characters';\nimport { getCharacters as getCharactersApi } from '../src/api';\nimport { Character, Error } from '../src/types';\n\ninterface HomeProps {\n  characters?: Array<Character>,\n  page?: number,\n  pages?: number,\n  error?: Error,\n}\n\nconst Home: NextPage<HomeProps> = (props: HomeProps) => {\n  const {\n    characters,\n    page,\n    pages,\n    error,\n  } = props;\n  if (error) {\n    return <ErrorPage statusCode={error.code} />;\n  }\n  return (\n    <>\n      <Head>\n        <title>\n          Characters - The Rick and Morty Wiki\n        </title>\n      </Head>\n      <Characters characters={characters} page={page} pages={pages} />\n    </>\n  );\n};\n\nHome.getInitialProps = async ({ query }) => {\n  const page: number = Number(query.page) || 1;\n  const response = await getCharactersApi(page);\n  if ('error' in response) {\n    return {\n      error: response.error,\n    };\n  }\n  const characters:Array<Character> = response.results;\n  const { pages }: { pages: number } = response.info;\n  return {\n    characters,\n    page,\n    pages,\n  };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}