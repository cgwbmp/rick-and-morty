{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mq/Documents/rick-and-morty/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Router from 'next/router';\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      pending: false\n    });\n  }\n\n  componentDidMount() {\n    console.log('use');\n    Router.events.on('routeChangeStart', this.setPending);\n    Router.events.on('routeChangeComplete', this.unsetPending);\n    Router.events.on('routeChangeError', this.unsetPending);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.setPending);\n    Router.events.off('routeChangeComplete', this.unsetPending);\n    Router.events.off('routeChangeError', this.unsetPending);\n  }\n\n  setPending() {\n    console.log('pending');\n    this.setState({\n      pending: true\n    });\n  }\n\n  unsetPending() {\n    this.setState({\n      pending: true\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const {\n      pending\n    } = this.state;\n\n    if (pending) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n    /* eslint-disable react/jsx-props-no-spreading */\n\n\n    return __jsx(React.Fragment, null, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n    /* eslint-enable react/jsx-props-no-spreading */\n  }\n\n}","map":{"version":3,"sources":["/home/mq/Documents/rick-and-morty/pages/_app.tsx"],"names":["React","App","Router","MyApp","pending","componentDidMount","console","log","events","on","setPending","unsetPending","componentWillUnmount","off","setState","render","Component","pageProps","props","state"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAC7B;AACNG,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAL,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,UAA1C;AACAR,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,YAA7C;AACAT,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,YAA1C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBV,IAAAA,MAAM,CAACM,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKH,UAA3C;AACAR,IAAAA,MAAM,CAACM,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyC,KAAKF,YAA9C;AACAT,IAAAA,MAAM,CAACM,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,YAA3C;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAKO,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAE;AADG,KAAd;AAGD;;AAEDO,EAAAA,YAAY,GAAG;AACb,SAAKG,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAE;AADG,KAAd;AAGD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,UAAM;AAAEd,MAAAA;AAAF,QAAc,KAAKe,KAAzB;;AACA,QAAIf,OAAJ,EAAa;AACX,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD;AACD;;;AACA,WACE,4BACE,MAAC,SAAD,eAAea,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKA;AACD;;AAhDoC","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport Router from 'next/router';\n\nexport default class MyApp extends App {\n  state = {\n    pending: false,\n  };\n\n  componentDidMount() {\n    console.log('use');\n    Router.events.on('routeChangeStart', this.setPending);\n    Router.events.on('routeChangeComplete', this.unsetPending);\n    Router.events.on('routeChangeError', this.unsetPending);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.setPending);\n    Router.events.off('routeChangeComplete', this.unsetPending);\n    Router.events.off('routeChangeError', this.unsetPending);\n  }\n\n  setPending() {\n    console.log('pending');\n    this.setState({\n      pending: true,\n    });\n  }\n\n  unsetPending() {\n    this.setState({\n      pending: true,\n    });\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    const { pending } = this.state;\n    if (pending) {\n      return (\n        <div>\n          Loading...\n        </div>\n      );\n    }\n    /* eslint-disable react/jsx-props-no-spreading */\n    return (\n      <>\n        <Component {...pageProps} />\n      </>\n    );\n    /* eslint-enable react/jsx-props-no-spreading */\n  }\n}\n"]},"metadata":{},"sourceType":"module"}