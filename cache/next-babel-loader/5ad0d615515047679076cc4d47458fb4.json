{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nconst entrypoint = 'https://rickandmortyapi.com';\n\nasync function getCharacters(page = 1) {\n  const source = await fetch(`${entrypoint}/api/character?page=${page}`);\n  const response = await source.json();\n\n  if ('error' in response) {\n    return {\n      error: {\n        code: source.status,\n        message: response.error\n      }\n    };\n  }\n\n  return response;\n}\n\nexport default getCharacters;\nexport { getCharacters };","map":{"version":3,"sources":["/home/mq/Documents/rick-and-morty/src/api/characters.ts"],"names":["fetch","entrypoint","getCharacters","page","source","response","json","error","code","status","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAGA,MAAMC,UAAU,GAAG,6BAAnB;;AA+BA,eAAeC,aAAf,CAA6BC,IAAY,GAAG,CAA5C,EAAiF;AAC/E,QAAMC,MAAgB,GAAG,MAAMJ,KAAK,CAAE,GAAEC,UAAW,uBAAsBE,IAAK,EAA1C,CAApC;AACA,QAAME,QAAiD,GAAG,MAAMD,MAAM,CAACE,IAAP,EAAhE;;AACA,MAAI,WAAWD,QAAf,EAAyB;AACvB,WAAO;AACLE,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,MADR;AAELC,QAAAA,OAAO,EAAEL,QAAQ,CAACE;AAFb;AADF,KAAP;AAMD;;AACD,SAAOF,QAAP;AACD;;AAED,eAAeH,aAAf;AACA,SACEA,aADF","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { Error } from '../types';\n\nconst entrypoint = 'https://rickandmortyapi.com';\n\ninterface OriginalApiResponse {\n  results: Array<{\n    id: string,\n    name: string,\n    gender: string,\n    species: string,\n    location: {\n      name: string,\n    },\n    status: string,\n    image: string,\n  }>,\n  info: {\n    count: number,\n    pages: number,\n  },\n}\n\ninterface OriginalApiReject {\n  error: string,\n}\n\ninterface ApiResponse extends OriginalApiResponse {\n}\n\ninterface ApiReject {\n  error: Error,\n}\n\nasync function getCharacters(page: number = 1): Promise<ApiResponse | ApiReject> {\n  const source: Response = await fetch(`${entrypoint}/api/character?page=${page}`);\n  const response: OriginalApiResponse | OriginalApiReject = await source.json();\n  if ('error' in response) {\n    return {\n      error: {\n        code: source.status,\n        message: response.error,\n      },\n    };\n  }\n  return response;\n}\n\nexport default getCharacters;\nexport {\n  getCharacters,\n};\n"]},"metadata":{},"sourceType":"module"}